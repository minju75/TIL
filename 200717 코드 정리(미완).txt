$ git config --global user.name minju75
$ git cinfig --global user.email sdr9873@naver.com
$ git config --global --
GIT INIT
$ git status
$ git add a.txt.txt
$ git status
$ git commit -m 'first commit'
$git status
$git remote add origin https://github.com/minju75/TIL.git
$git push -u origin master
$git init
$git add
$git commit ~~
$git remote add origin https://github.com/minju75/TIL.git
$git push -u origin master

$git add .
$git status




http://gitignore.io/


 ls
python kospi.py
pip install beautifulsoup4
from bs4 import BeautifulSoup

data = beautifulsoup(response, 'html.parser')

select = data.select_one('#KOSPI_now')
print(select.text)



날씨


# 아래에 코드를 작성하세요.
​
# 1. 필요한 모듈을 불러오세요.
import requests
# 2. 요청 url을 만드세요.
city = 'Gumi'
​
url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={key}'
​
response = requests.get(url).json()
# 기온에 대한 정보
data = response['main']
print(data['temp'])
​
# 3. 날씨, 현재온도, 최저 및 최고온도에 대한 데이터를 꺼내세요.
weather = response['weather'][0]['main']
temp = data['temp'] -273.15
max_temp = data['temp_max']
min_temp = data['temp_min']
​
print(weather, temp, max_temp, min_temp)
# 4. 꺼낸 데이터 값을 기준으로 상태 정보를 출력하세요.
​

날씨 2

# 아래에 코드를 작성하세요.

# 1. 필요한 모듈을 불러오세요.
import requests
# 2. 요청 url을 만드세요.
city = 'Gumi'

url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={key}'

response = requests.get(url).json()
# 기온에 대한 정보
data = response['main']
print(data['temp'])

# 3. 날씨, 현재온도, 최저 및 최고온도에 대한 데이터를 꺼내세요.
weather = response['weather'][0]['main']
temp = data['temp'] -273.15
max_temp = data['temp_max']
min_temp = data['temp_min']

print(weather, temp, max_temp, min_temp)
# 4. 꺼낸 데이터 값을 기준으로 상태 정보를 출력하세요.
print(f'현재{city}의 날씨는 {weather}이며, 현재 기온은 {temp} (최저:{min_temp}/최고:{max_temp})입니다.')
